import json
import os
import datetime
from typing import Set, Dict, List

USED_FILE = "used_today.json"

def _today_key() -> str:
    return str(datetime.date.today())

def _load_all() -> Dict[str, List[str]]:
    if not os.path.exists(USED_FILE):
        return {}
    try:
        with open(USED_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
            return data if isinstance(data, dict) else {}
    except Exception:
        return {}

def load_used_today() -> Set[str]:
    data = _load_all()
    return set(data.get(_today_key(), []))

def save_used_today(used: Set[str]) -> None:
    data = _load_all()
    data[_today_key()] = sorted(list(used))
    # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —á–∏—Å—Ç–∏–º –∑–∞–ø–∏—Å–∏ —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π
    try:
        today = datetime.date.today()
        for k in list(data.keys()):
            d = datetime.date.fromisoformat(k)
            if (today - d).days > 7:
                data.pop(k, None)
    except Exception:
        pass

    with open(USED_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

def clear_used_today() -> None:
    """–û—á–∏—â–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –ø–∞—Ä—ã, –Ω–µ –ª–æ–º–∞—è —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞."""
    data = _load_all()
    data[_today_key()] = []
    with open(USED_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)
    print("üßπ used_today.json: –æ—á–∏—â–µ–Ω —Å–ø–∏—Å–æ–∫ –¥–ª—è —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π –¥–∞—Ç—ã.")
