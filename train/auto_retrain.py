import pandas as pd
import os
import joblib
from sklearn.neural_network import MLPClassifier
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from datetime import datetime
from config import ADMIN_CHAT_ID
from aiogram import Bot

LOG_FILE = "signals_log.csv"
MODEL_DIR = "model"

async def auto_retrain(bot: Bot):
    if not os.path.exists(LOG_FILE):
        msg = "‚ö†Ô∏è –ù–µ—Ç –ª–æ–≥–æ–≤ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è."
        print(msg)
        await bot.send_message(chat_id=ADMIN_CHAT_ID, text=msg)
        return

    df = pd.read_csv(LOG_FILE)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫
    if not {"symbol", "profit_%", "position"}.issubset(df.columns):
        msg = "‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è."
        print(msg)
        await bot.send_message(chat_id=ADMIN_CHAT_ID, text=msg)
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º label: 1 = –ø—Ä–∏–±—ã–ª—å–Ω–∞—è —Å–¥–µ–ª–∫–∞, 0 = —É–±—ã—Ç–æ—á–Ω–∞—è
    df["label"] = (df["profit_%"] > 0).astype(int)

    # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ —Å—Ç–æ–ª–±—Ü—ã
    X = df.drop(columns=[
        "datetime", "symbol", "position", "status", "closed_at", "label"
    ], errors="ignore")
    y = df["label"]

    if len(X) < 50:  # –ú–∏–Ω–∏–º—É–º 50 —Å–¥–µ–ª–æ–∫ –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
        msg = "‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö (<50) –¥–ª—è –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∏—è."
        print(msg)
        await bot.send_message(chat_id=ADMIN_CHAT_ID, text=msg)
        return

    # –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ
    scaler = StandardScaler()
    X_scaled = scaler.fit_transform(X)

    # –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ train/test
    X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)

    # –û–±—É—á–µ–Ω–∏–µ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏
    model = MLPClassifier(hidden_layer_sizes=(64, 32), activation='relu', max_iter=500, random_state=42)
    model.fit(X_train, y_train)

    acc = model.score(X_test, y_test)
    msg = f"‚úÖ –ú–æ–¥–µ–ª—å –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∞! –¢–æ—á–Ω–æ—Å—Ç—å –Ω–∞ —Ç–µ—Å—Ç–µ: {acc:.2%}"
    print(msg)
    await bot.send_message(chat_id=ADMIN_CHAT_ID, text=msg)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏ –º–æ–¥–µ–ª–∏
    os.makedirs(MODEL_DIR, exist_ok=True)
    joblib.dump(model, os.path.join(MODEL_DIR, "signal_model.pkl"))
    joblib.dump(scaler, os.path.join(MODEL_DIR, "scaler.pkl"))

    done_msg = f"üì¶ –ú–æ–¥–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞ {datetime.now().strftime('%Y-%m-%d %H:%M:%S')} –ú–°–ö"
    print(done_msg)
    await bot.send_message(chat_id=ADMIN_CHAT_ID, text=done_msg)
